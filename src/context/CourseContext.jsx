import React, { createContext, useContext, useState, useEffect } from "react";

const CoursesContext = createContext();

export const useCourses = () => useContext(CoursesContext);


const defaultCourses = [
    {
        id: "course1",
        title: "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
        description: "–û—Å–Ω–æ–≤—ã –∞–Ω–∞–ª–∏–∑–∞",
        tasks: [
            {
                id: "task1",
                title: "–î–æ–º–∞—à–∫–∞ 1",
                description: "–†–µ—à–∏—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ",
                canSubmit: true,
                submission: null,
            },
            {
                id: "task2",
                title: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è",
                description: "–ì—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π",
                grade: 8,
                canSubmit: true,
                submission: null,
            },
            {
                id: "task3",
                title: "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è",
                description: "–¢–µ—Å—Ç –ø–æ –≥–ª–∞–≤–µ 1",
                canSubmit: false,
            },
        ],
        attendance: {
            total: 10,
            attended: 7,
        },
    },
    {
        id: "course2",
        title: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
        description: "JS, React",
        tasks: [
            {
                id: "task1",
                title: "–°–æ–∑–¥–∞—Ç—å ToDo App",
                description: "React, JSX, state",
                canSubmit: true,
                submission: null,
            },
            {
                id: "task2",
                title: "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è –ø–æ –º–∞—Å—Å–∏–≤–∞–º",
                description: "–¶–∏–∫–ª—ã –∏ map",
                grade: 9,
                canSubmit: false,
            },
        ],
        attendance: {
            total: 12,
            attended: 10,
        },
    },
];


const loadCourses = () => {
    try {
        const stored = localStorage.getItem("courses");
        let courses = stored ? JSON.parse(stored) : defaultCourses;

        // üéØ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫—É—Ä—Å–æ–≤ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        const currentUser = JSON.parse(localStorage.getItem("currentUser") || "null");

        if (currentUser?.role === "student" && currentUser.courses) {
            courses = courses.filter(course => currentUser.courses.includes(course.id));
        }

        return courses;
    } catch (e) {
        console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—É—Ä—Å–æ–≤:", e);
        return defaultCourses;
    }
};



export const CoursesProvider = ({ children }) => {
    const [courses, setCourses] = useState([]);

    useEffect(() => {
        const storedUser = localStorage.getItem("currentUser");
        if (storedUser) {
            const user = JSON.parse(storedUser);
            if (user.role === "student") {
                // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫—É—Ä—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–∞
                setCourses(defaultCourses.filter(c => user.courses.includes(c.id)));
            } else if (user.role === "teacher") {
                // —É—á–∏—Ç–µ–ª—å –≤–∏–¥–∏—Ç –≤—Å–µ –∫—É—Ä—Å—ã
                setCourses(defaultCourses);
            } else {
                setCourses(defaultCourses);
            }
        } else {
            setCourses([]);
        }
    }, []);

    return (
        <CoursesContext.Provider value={{ courses, setCourses }}>
            {children}
        </CoursesContext.Provider>
    );
};
